public static void xpto(int[] v, int n) {
if (n <= 1) return;
n=n/2;
for(i=0; i<n; i=i+1)
v[i] = v[2i] + v[2i +1]
xpto(v, n)
}


C(1) = O(1)
C(n) = O(1) + O(1) + O(n/2) * O(1) + C(n/2) = O(n/2) + C(n/2)

C(n) = C(n/2) + n/2 = ... = C(n/2^k) + (2^k-1/2^k)

n = 2^k (=) k = log2n

C(n) = C(1) + (2^log2n - 1 / 2^log2n) * n = O(1) + ( n-1 / n)*n = O(1) + O(n) + O(1) = O(n)