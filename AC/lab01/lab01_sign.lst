P16 assembler v1.4.0 (Mar  6 2023)	lab01_sign.lst	Wed Mar 15 14:28:06 2023

Sections
Index   Name            Address   Size
0       .text           0000      0026 38

Symbols
Name                    Type      Value       Section
else_while              LABEL     0018 24     .text
if_cond                 LABEL     0002 2      .text
if_cond2                LABEL     0008 8      .text
if_end                  LABEL     0024 36     .text
line#39                 LABEL     0024 36     .text
while                   LABEL     000C 12     .text
while_end               LABEL     0024 36     .text

Code listing
   1           	
   2           	; -----------------------------------------------------------------------------
   3           	; Ficheiro:  lab01.S
   4           	; Descricao: Codigo de suporte a realizacao da 1a atividade laboratorial de AC.
   5           	; Autor:     Tiago M Dias (tiago.dias@isel.pt)
   6           	; Data:      11-03-2022
   7           	; -----------------------------------------------------------------------------
   8           	
   9           		; r0 guarda o valor da variavel M
  10           		; r1 guarda o valor da variavel m
  11           		; r2 guarda o valor da variavel p
  12           		; r3 e utilizado para guardar valores temporariamente
  13           	
  14           	
  15 0000 02 60		mov r2, #0         ; p = 0
  16           	if_cond:
  17 0002 03 60		mov	r3, #0         ; guarda-se o zero temporariamente num registo
  18 0004 80 B9		cmp r0, r3         ; M != 0
  19 0006 0E 40		beq if_end
  20           	if_cond2:
  21 0008 B0 B8	    cmp r3, r1
  22 000A 06 50	    bge else_while
  23           	while:
  24 000C 03 60		mov r3, #0		   ; guarda-se o zero temporariamente num registo
  25 000E B0 B8		cmp	r3, r1         ; m > 0
  26 0010 09 50		bge	while_end
  27 0012 22 80		add	r2, r2, r0     ; p = p + M
  28 0014 91 A8		sub	r1, r1, #1     ; m--
  29 0016 FA 5B		b	while
  30           	else_while:
  31 0018 03 60	    mov r3, #0		   ; guarda-se o zero temporariamente num registo
  32 001A 90 B9		cmp	r1, r3         ; m < 0
  33 001C 03 50		bge	while_end
  34 001E 22 88		sub	r2, r2, r0     ; p = p - M
  35 0020 91 A0		add	r1, r1, #1     ; m++
  36 0022 FA 5B		b	else_while
  37           	while_end:
  38           	if_end:
  39 0024 FF 5B		b   .
