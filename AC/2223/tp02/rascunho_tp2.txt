3.1 Análise da microarquitetura

exercicio 1
A afirmação é falsa visto que a arquitetura deste processador armazena os dados do programa e os dados das instruções na mesma memória. Assim, trata-se de uma arquitetura de von Neumann.


exercicio 2
O bloco Ext tem como funcionalidade extender o sinal de um valor imediato.


exercicio 3



3.2 Codificação das instruções

exercicio 1


exercicio 2





3.3 Projeto do descodicador de instruções

exercicio 1


exercicio 2


exercicio 3
Capacidade da ROM = 16 posições * 12 bits = 192 bits = 24 bytes





3.4 Codificação de programas em linguagem máquina

exercicio 1
O troço de código apresentado realiza a soma dos elementos de um array. Começa-se por iniciar os registos r0, r1 e r2 com o valor zero. De seguida entra-se dentro do loop em que primeiro é carregado o valor do endereço (primeiro elemento do array) contido em r0 no registo r3. Adiciona o valor de r3 ao valor de r1, que corresponde à soma parcial dos elementos do array até ao momento. Guarda-se no registo r4 o valor 1 para incrementar o valor de r0 no loop seguinte e adiciona-se o valor de r4 ao valor de r0, que é o endereço do próximo elemento do array a ser somado. Posto isto, compara-se o valor de r0 com o valor de r2, que é o tamanho do array e se r0 for menor que r2, o programa volta para o label "loop" caso contrário guarda-se o valor contido em r1 no endereço contido em r2 (este endereço é o último elemento do array, que agora contém a soma total dos elementos do mesmo). De seguida guarda-se em r5 o valor 6 e adiciona-se o valor de r5 a si mesmo - o que corresponde a multiplicar r5 por 2. Por fim, realiza-se um salto incondicional para o endereço contido em r5 


exercicio 2


