LIBRARY ieee;
USE ieee.STD_LOGIC_1164.ALL;

entity serialReceiver is
	port ( 
		  SDX : in std_logic;
        SCLK : in std_logic;
		  MCLK : in std_logic;
		  reset : in std_logic;
		  not_SS : in std_logic;
		  accept : in std_logic;
        D : out std_logic_vector (4 downto 0); 
        DXval : out std_logic;
    );
	 
	 end serialReceiver;
	
architecture arq of serialReceiver is

component shift_Register is 
    port ( 
        enRx : in std_logic;
		  accept : in std_logic;
        eq5 : in std_logic;
        clr : out std_logic;
		  wr : out std_logic;
		  DXval : out std_logic
		  
    );
end component;

component Counter is
	port (
	
	);
end component;

--component Comparador is
--	port (
--	
--	);
--end component;

component Shift_Register is
	port (
	data : in std_logic;
	enable : in std_logic;
	clk : in std_logic;
	D : in std_logic_vector(4 downto 0)
	
	);
end component;







signal  SC_to_C_s, SC_to_SR_s: std_logic;
--signal  C_to_Comp_s : std_logic_vector (3 downto 0);
--signal  Comp_to_SC_s : std_logic;
--signal  clks : std_logic;


begin
	u_Serial_Control: Serial_Control port map( 
		SS      		 => enRx,
		accept  		 => accept,
		Comp_to_SC_s => eq5,
		clr 	  		 => SC_to_C_s,
		wr 		  	 => SC_to_SR_s,
		DXval  	    => DXval
		);

		
	u_Counter: Counter port map(
		.............=>......
	);
	
	
--	u_Comparador: Comparador port map(
--		A            => C_to_Comp_s,
--    R            => Comp_to_SC_S,
--	);
	
	u_Shift_Register: Shift_Register port map(
		SDX          => data,
		SCLK         => clk,
		SC_to_SR_s   => enable,
		D            => D
	);	
	
		end arq;	